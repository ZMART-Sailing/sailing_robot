<launch>
    <!--
    General test file to launch simulator
    -->

    <!--
    Parameters
    -->


    <rosparam file="$(find sailing_robot)/launch/parameters/default.yaml" command="load"/>

    <rosparam file="$(find sailing_robot)/launch/parameters/calibration_blackpython.yaml" ns="/calibration"
              command="load"/>
    <rosparam file="$(find sailing_robot)/launch/parameters/rudder_settings.yaml" command="load"/>
    <rosparam file="$(find sailing_robot)/launch/parameters/sail_settings.yaml" command="load"/>
    <!-- new stragy /-->
    <!--rosparam file="$(find sailing_robot)/launch/parameters/rudder_settings_new.yaml" command="load"/-->
    <!--rosparam file="$(find sailing_robot)/launch/parameters/sail_settings_new.yaml" command="load"/-->

    <!--rosparam file="$(find sailing_robot)/launch/parameters/test.yaml" command="load"/-->
    <rosparam file="$(find sailing_robot)/launch/parameters/test2.yaml" command="load"/>
    <!--rosparam file="$(find sailing_robot)/launch/parameters/sailingClub_waypoints.yaml" command="load"/-->

<!--    <rosparam file="$(find sailing_robot)/launch/parameters/simulator.yaml" command="load"/>-->

    <param name="log_name" value="simulator_test"/>

    <!--
    Nodes
    -->
    <node name="tasks" pkg="sailing_robot" type="tasks" output="screen"/>
    <!-- uncomment if helming is not used
    <node name = "tack" pkg="sailing_robot" type = "tack" />
    <node name = "actuator_demand_rudder" pkg="sailing_robot" type = "actuator_demand_rudder" />
    <node name = "actuator_demand_sail" pkg="sailing_robot" type = "actuator_demand_sail" />
    -->
    <node name="helming" pkg="sailing_robot" type="helming"/>
    <!--node name = "simulation_position" pkg='sailing_robot' type="simulation_position"/-->
    <!--node name = "simulation_velocity" pkg='sailing_robot' type="simulation_velocity"/-->
    <node name="actuator_driver_rudder" pkg="sailing_robot" type="actuator_driver_rudder"/>
    <node name="actuator_driver_sail" pkg="sailing_robot" type="actuator_driver_sail"/>
    <node name="nano_client" pkg="sailing_robot" type="nano_client" output="screen"/>

    <!--    pixhawk gps -->
<!--    <node name="ser_gps" pkg="sailing_robot" type="ser_gps" output="screen"/>-->
    <!--    base station gps cannot use with pixhawk at same time-->
    <include file="$(find correction_receiver_ros)/launch/correction_receiver_ros.launch"/>
    <!--    simulator gps cannot use with pixhawk at same time-->
<!--    <node name = "sim_gps" pkg = "ball_detect" type = "sim_gps" respawn = "true" output = "screen" />-->

    <include file="$(find ball_detect)/launch/yolo_detection.launch"/>

    <node name="client_tcp" pkg="sailing_robot" type="client_tcp"/>
    <!--node name = "debugging_2D_plot_matplot" pkg="sailing_robot" type="debugging_2D_plot_matplot" /-->


    <!--node name = "sensor_camera_detect" pkg="sailing_robot" type="sensor_camera_detect" /-->

    <!--node name = "sensor_processed_wind_direction" pkg="sailing_robot" type="sensor_processed_wind_direction" /-->

    <!--node name = "simulation_gps_fix" pkg="sailing_robot" type="simulation_gps_fix" /-->
    <!--node name="debugging_gps_log" pkg='sailing_robot' type="debugging_gps_log"/-->

    <node name="debugging_dashboard" pkg="sailing_robot" type="debugging_dashboard"/>
<!--    <node name ="rosbag_record" pkg = "rosbag" type = "record" respawn = "true" args = "-a -o /home/zmart/sailing_robot" /> -->
</launch>
