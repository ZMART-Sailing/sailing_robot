<launch>
    <!--
    28.08.2018 station keeping at Calshot WRSC 2018
    -->

    <!--
    Parameters
    -->

    <rosparam file="$(find sailing_robot)/launch/parameters/default.yaml" command="load"/>

    <rosparam file="$(find sailing_robot)/launch/parameters/calibration_blackpython.yaml" ns="/calibration" command="load"/>
    <rosparam file="$(find sailing_robot)/launch/parameters/sailsettings_blackpython.yaml" command="load"/>
    <rosparam file="$(find sailing_robot)/launch/parameters/servos_blackpython.yaml" command="load"/>

    <rosparam file="$(find sailing_robot)/launch/parameters/calshot_station_keeping.yaml" command="load"/>   <!-- **Add waypoints file(can be found in the parameters directory, sailingClub_waypoints.yaml) -->

    <arg name="log_name" value="calshot_station_keeping" />         <!-- **Add log name(sailingclub_tests, eastleigh_tests) -->
    <param name="log_name" value="$(arg log_name)" />

    <!--
    Nodes
    -->
    <include file="$(find xsens_driver)/launch/xsens_driver.launch" />
    <node name = "sensor_service_imu" pkg="sailing_robot" type="sensor_service_imu" respawn="true"/>
    <node name = "sensor_driver_gps" pkg='sailing_robot' type="sensor_driver_gps" respawn="true"/>
    <node name = "sensor_driver_wind_direction" pkg="sailing_robot" type="sensor_driver_wind_direction"  respawn="true"/>
    <node name = "sensor_driver_multiplexer" pkg="sailing_robot" type="sensor_driver_multiplexer" respawn="true"/>
    <node name = "sensor_processed_wind_direction" pkg="sailing_robot" type="sensor_processed_wind_direction"/>
    <node name = "sensor_driver_battery" pkg="sailing_robot" type="sensor_driver_battery"/>

    <node name = "tasks" pkg="sailing_robot" type = "tasks"  respawn="true"/>
    <node name = "helming" pkg="sailing_robot" type="helming" respawn="true" />

    <!--    <node name = "tack" pkg="sailing_robot" type = "tack"  respawn="true"/>
    <node name = "actuator_demand_sail" pkg="sailing_robot" type = "actuator_demand_sail" respawn="true"/>
    <node name = "actuator_demand_rudder" pkg="sailing_robot" type = "actuator_demand_rudder" respawn="true"/>-->

    <node name = "actuator_driver_sail" pkg="sailing_robot" type = "actuator_driver_sail" respawn="true"/>
    <node name = "actuator_driver_rudder" pkg="sailing_robot" type="actuator_driver_rudder"  respawn="true"/>

    <node name="debugging_dump_params" pkg='sailing_robot' type="debugging_dump_params"/>

    <!-- Rosbag records messages for later investigation -->
    <node name="record" pkg="rosbag" type="record" args="-a -o /home/pi/sailing-robot/$(arg log_name)"/>

    <!-- Also record GPS data as required by the competition -->
    <node name="debugging_gps_log" pkg='sailing_robot' type="debugging_gps_log" respawn="true"/>

    <!-- Serve an HTML dashboard so we can see what's going on -->
    <node name = "debugging_dashboard" pkg="sailing_robot" type = "debugging_dashboard" />
 </launch>
